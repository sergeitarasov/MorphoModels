
# Number of states in Q matrix
NUM_STATES=4

# declare rate matrix
for (i in 1:NUM_STATES) {
  for (j in 1:NUM_STATES) {
    rates[i][j] <-0.0
  }
}

rates[1][2]<-1.0
rates[1][3]<-0.0
rates[1][4]<-0.0

rates[2][1]<-1.0
rates[2][3]<-1.0
rates[2][4]<-0.0

rates[3][1]<-1.0
rates[3][2]<-1.0
rates[3][4]<-1.0

rates[4][1]<-1.0
rates[4][2]<-1.0
rates[4][3]<-1.0

#make Q matrix
Q_rate := fnFreeK(transition_rates=rates, rescaled=false, matrixExponentialMethod="eigen")

# root freqs are taking at equilibrium
# can be also euqla
#dir_param<-v(1, 1, 1, 1)
dir_param<-v(12, 8, 3, 1)

root_freq~dnDirichlet(dir_param)

#make dnPhyloCTMC
phySeq ~ dnPhyloCTMC(tree=timetree, Q=Q_rate, rootFreq=root_freq, branchRates=branch_rates, type="Standard", coding="variable")
phySeq.clamp(chars)
