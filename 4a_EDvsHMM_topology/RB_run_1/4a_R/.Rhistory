hist(oo)
mcc_tb1000
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,3])
}
hist(oo)
oo<=0
whihc(oo<=0)
which(oo<=0)
ss <- sample(1:1000, 1000, replace = T)
mcc_tb1000[ss,]
fr <- apply(mcc_tb1000[ss,], 2, table)
fr
apply(mcc_tb1000, 2, table)
df <- apply(mcc_tb1000, 2, table)
df[,2]
xmonte(df[,3], df[,2], detail=3)
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 100, replace = F)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,3])
}
hist(oo)
which(oo<=0)
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 200, replace = F)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,3])
}
hist(oo)
which(oo<=0)
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 500, replace = F)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,3])
}
hist(oo)
which(oo<=0)
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 500, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,3])
}
hist(oo)
which(oo<=0)
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 500, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,3])
}
hist(oo)
which(oo<=0)
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 700, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,3])
}
hist(oo)
which(oo<=0)
library(boot, lib.loc = "/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
# Bootstrap 95% CI for R-Squared
library(boot)
# function to obtain R-Squared from the data
rsq <- function(formula, data, indices) {
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data=d)
return(summary(fit)$r.square)
}
# bootstrapping with 1000 replications
results <- boot(data=mtcars, statistic=rsq,
R=1000, formula=mpg~wt+disp)
# view results
results
plot(results)
# get 95% confidence interval
boot.ci(results, type="bca")
mtcars
# Usual bootstrap of the ratio of means using the city data
ratio <- function(d, w) sum(d$x * w)/sum(d$u * w)
boot(city, ratio, R = 999, stype = "w")
ratio
city
View(mcc.tb)
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,3])
}
hist(oo)
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,3])
}
hist(oo)
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,3])
}
hist(oo)
which(oo<=0)
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,3])
}
hist(oo)
which(oo<=0)
fr
fr[1,2]
fr[1,3]
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,4])
}
hist(oo)
which(oo<=0)
oo <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
oo <- c(oo, fr[1,2]-fr[1,1])
}
hist(oo)
which(oo<=0)
st2 <- c()
st3 <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
#oo <- c(oo, fr[1,2]-fr[1,3])
st2[i] <- fr[1,2]
st3[i] <- fr[1,3]
}
st2
plot(st2)
hist(st2)
hist(st2)
hist(st3)
hist(st2)
hist(st3)
st <- c()
st <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- fr[1,2]-fr[1,3]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
which(st<=0)
length(which(st<=0))
length(which(st<=0))/1000
st <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- fr[1,2]-fr[1,3]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
length(which(st<=0))/1000
st <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- fr[1,2]-fr[1,1]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
length(which(st<=0))/1000
st <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- fr[1,2]-fr[1,4]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
length(which(st<=0))/1000
mcc_tb1000
for (i in 1:100000){
ss <- sample(1:1000, 1, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- fr[1,2]-fr[1,4]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
ss <- sample(1:1000, 1, replace = T)
mcc_tb1000[ss,]
#fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- mcc_tb1000[ss,2]-mcc_tb1000[ss,3]
st
st <- c()
for (i in 1:100000){
ss <- sample(1:1000, 1, replace = T)
#fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- mcc_tb1000[ss,2]-mcc_tb1000[ss,3]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
st
st <- c()
for (i in 1:2){
ss <- sample(1:1000, 1, replace = T)
#fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- mcc_tb1000[ss,2]-mcc_tb1000[ss,3]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
st
mcc_tb1000[ss,2]
mcc_tb1000$M6[2]-mcc_tb1000$M6[3]
mcc_tb1000
#fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- mcc_tb1000$M6[2]-mcc_tb1000$Ind[3]
st
mcc_tb1000$M6[2]-mcc_tb1000$Ind[3]
st <- c()
for (i in 1:2){
ss <- sample(1:1000, 1, replace = T)
#fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- mcc_tb1000$M6[2]-mcc_tb1000$Ind[3]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
st
st <- c()
for (i in 1:10000){
ss <- sample(1:1000, 1, replace = T)
#fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- mcc_tb1000$M6[2]-mcc_tb1000$Ind[3]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
st
which(st<=0)
trees<-pbtree(n=4, scale=1, b=.1, d=0, nsim=1000)
#write.tree(trees, file = 'data/trees.tre')
plot(trees)
trees<-pbtree(n=4, scale=1, b=.1, d=0, nsim=1000)
#write.tree(trees, file = 'data/trees.tre')
plot(trees)
write.tree(trees, file = 'data/trees.tre')
trees <- read.tree('data/trees.tre')
#-- Rate Matrix ED_M6
q <- 1
C1 <- initQ(c("r", "b"), q)
A <- initQ(c('A*', 'A'), q)
Tl <- initQ(c('T*', 'T'), q)
step1 <- amaED(A, C1, type = "ql")
Qta <- amaED(Tl, step1, type = "ap")
Qta <- Qta/-diag(Qta)
Qta
Qta <-Qta*.3
Qta
pi <- rep(1/4,4)
names(pi) <- colnames(Qta)
#----- Simulate hist
Nch=10 # chars to select into matrix
nex.folder <- '../data' # folder for matrix
nex.folder.exp <- '../data_exp' # folder for expanded chars
hist <- list()
for (i in 1:length(trees)){
hist.i <- sim.history(trees[[i]], Qta, nsim=100, direction=c("row_to_column"), anc=pi)
fl <- paste0('r', i, '_', Nch, 'ch.nex')
print(paste0('Sim ', i))
hist2matrix(hist.i, Nch=Nch, recode.from=c('T*', 'TA*',  'TAr', 'TAb'), recode.to=c(0:3), nex.folder, nex.file=fl)
hist2matrix(hist.i, Nch=Nch, recode.from=c('T*', 'TA*',  'TAr', 'TAb'), recode.to=c('0 1 2 3', '4 5', '6', '7'), nex.folder.exp, nex.file=fl)
hist[[i]] <- hist.i
}
saveRDS(hist, file = 'data/hist.rds')
#rb.out <- '/Users/taravser/Documents/My_papers/Reply2Goloboff/Rev/MorphoModels/4a_EDvsHMM_topology/Puhti/ed_models/4a_EDvsHMM_topology/RB_run_1/output'
rb.out <- '/Users/taravser/Documents/My_papers/Reply2Goloboff/Rev/MorphoModels/4a_EDvsHMM_topology/Puhti/RB_run_1/output'
mcc.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*mcc.tre$")
length(mcc.M3)
mcc.M6 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M6'), pattern="*mcc.tre$")
mcc.Ind <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_ind'), pattern="*mcc.tre$")
mcc.SW <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_sw_M6'), pattern="*mcc.tre$")
mcc.M6
mcc.Ind
# original trees
trees <- read.tree('data/trees.tre')
nm0 <- paste0('r', 1:1000)
trees
# reoder trees
nm3 <- str_match(names(mcc.M3), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
length(nm3)
unique(nm3) %>% length()
nm6 <-str_match(names(mcc.M6), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
nm.ind <- str_match(names(mcc.Ind), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
nm.sw <- str_match(names(mcc.SW), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
all(nm3==nm6)
all(nm3==nm.ind)
all(nm3==nm.sw)
# reoder
trees.order <- trees[nm3]
# chack roedering
calcRF(trees.order, mcc.M6) %>% table
calcRF(trees, mcc.M6) %>% table
#-------
mcc.tb <- tibble(
#id=paste0('r', nm3),
id=nm3,
M3=calcRF(trees.order, mcc.M3),
M6=calcRF(trees.order, mcc.M6),
Ind=calcRF(trees.order, mcc.Ind),
SW=calcRF(trees.order, mcc.SW)
)
mcc.tb
apply(mcc.tb[,2:5], 2, table)
mcc.tb
ss <- sample(1:1000, 1000, replace = T)
mcc.tb[ss,]
apply(mcc.tb[ss,], 2, table)
mcc.tb[ss,]
apply(mcc.tb[ss,2::5], 2, table)
apply(mcc.tb[ss,2:5], 2, table)
apply(mcc.tb[ss,2:5], 2, table)
apply(mcc.tb[ss,2:5], 2, table)
st <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc.tb[ss,2:5], 2, table)
st[i] <- fr[1,2]-fr[1,4]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
length(which(st<=0))/1000
st <- c()
st <- c()
for (i in 1:10000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc.tb[ss,2:5], 2, table)
st[i] <- fr[1,2]-fr[1,4]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
length(which(st<=0))/1000
length(which(st<=0))/1000
length(which(st<=0))/10000
ss
source('dep.R')
#rb.out <- '/Users/taravser/Documents/My_papers/Reply2Goloboff/Rev/MorphoModels/4a_EDvsHMM_topology/Puhti/ed_models/4a_EDvsHMM_topology/RB_run_1/output'
rb.out <- '/Users/taravser/Documents/My_papers/Reply2Goloboff/Rev/MorphoModels/4a_EDvsHMM_topology/Puhti/RB_run_1/output'
mcc.M3
mcc.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*mcc.tre$")
mcc.M6 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M6'), pattern="*mcc.tre$")
mcc.Ind <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_ind'), pattern="*mcc.tre$")
mcc.SW <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_sw_M6'), pattern="*mcc.tre$")
# original trees
trees <- read.tree('data/trees.tre')
nm0 <- paste0('r', 1:1000)
# reoder trees
nm3 <- str_match(names(mcc.M3), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
length(nm3)
unique(nm3) %>% length()
nm6 <-str_match(names(mcc.M6), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
nm.ind <- str_match(names(mcc.Ind), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
nm.sw <- str_match(names(mcc.SW), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
all(nm3==nm6)
all(nm3==nm.ind)
all(nm3==nm.sw)
# reoder
trees.order <- trees[nm3]
# chack roedering
calcRF(trees.order, mcc.M6) %>% table
calcRF(trees, mcc.M6) %>% table
#-------
mcc.tb <- tibble(
#id=paste0('r', nm3),
id=nm3,
M3=calcRF(trees.order, mcc.M3),
M6=calcRF(trees.order, mcc.M6),
Ind=calcRF(trees.order, mcc.Ind),
SW=calcRF(trees.order, mcc.SW)
)
mcc.tb
apply(mcc.tb[,2:5], 2, table)
apply(mcc.tb[,2:5], 2, table)/2500
apply(mcc.tb[,2:5], 2, table)/1000
calcRF(trees.order, mcc.M3)
calcRF(trees.order, mcc.M6)
calcRF(trees.order, mcc.Ind)
mj.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*map.tre$")
mj.M6 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M6'), pattern="*map.tre$")
mj.Ind <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_ind'), pattern="*map.tre$")
mj.SW <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_sw_M6'), pattern="*map.tre$")
calcRF(trees.order, mj.M3) %>% table
calcRF(trees.order, mj.M6) %>% table
calcRF(trees.order, mj.Ind) %>% table
calcRF(trees.order, mj.SW) %>% table
mj.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*mjcon.tre$")
mj.M6 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M6'), pattern="*mjcon.tre$")
mj.Ind <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_ind'), pattern="*mjcon.tre$")
mj.SW <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_sw_M6'), pattern="*mjcon.tre$")
calcRF(trees.order, mj.M3) %>% table
calcRF(trees.order, mj.M6) %>% table
calcRF(trees.order, mj.Ind) %>% table
calcRF(trees.order, mj.SW) %>% table
mj.tb <- tibble(
#id=paste0('r', nm3),
id=nm3,
M3=calcRF(trees.order, mj.M3),
M6=calcRF(trees.order, mj.M6),
Ind=calcRF(trees.order, mj.Ind),
SW=calcRF(trees.order, mj.SW)
)
apply(mj.tb[,2:5], 2, table)
mj.tb
st <- c()
st <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mj.tb[ss,2:5], 2, table)
st[i] <- fr[1,2]-fr[1,4]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
length(which(st<=0))/1000
apply(mj.tb[,2:5], 2, table)
rel=(-38912.916410537575 + -38913.06560756707)/2
st=(-38595.67008125089 + -38595.85089909137)/2
st-rel
citation("phytools")
##  ............................................................................
##  Read trees  2                                                            ####
rb.out <- '/Users/taravser/Documents/My_papers/Reply2Goloboff/Rev/MorphoModels/4a_EDvsHMM_topology/Puhti/RB_run_2/output'
mj.tb1 <- tibble(
#id=paste0('r', nm3),
id=nm3,
M3=calcRF(trees.order, mj.M3),
M6=calcRF(trees.order, mj.M6),
Ind=calcRF(trees.order, mj.Ind),
SW=calcRF(trees.order, mj.SW)
)
##  ............................................................................
##  Read trees  2                                                            ####
rb.out <- '/Users/taravser/Documents/My_papers/Reply2Goloboff/Rev/MorphoModels/4a_EDvsHMM_topology/Puhti/RB_run_2/output'
mj.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*mjcon.tre$")
mj.M6 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M6'), pattern="*mjcon.tre$")
mj.Ind <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_ind'), pattern="*mjcon.tre$")
mj.SW <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_sw_M6'), pattern="*mjcon.tre$")
mj.tb2 <- tibble(
#id=paste0('r', nm3),
id=nm3,
M3=calcRF(trees.order, mj.M3),
M6=calcRF(trees.order, mj.M6),
Ind=calcRF(trees.order, mj.Ind),
SW=calcRF(trees.order, mj.SW)
)
apply(mj.tb[,2:5], 2, table)
apply(mj.tb1[,2:5], 2, table)
apply(mj.tb2[,2:5], 2, table)
mj.tb1
mj.tb2
mj.tb2[,3]
mj.tb1[[,3]]
mj.tb1[[,3]]
mj.tb1[[,3]]
mj.tb2[[,3]]
mj.tb2$M6
mj.tb1$M6
mj.tb1$M6-mj.tb2$M6
which((mj.tb1$M6-mj.tb2$M6)!=0)
which((mj.tb1$M3-mj.tb2$M3)!=0)
mj.tb1
which((mj.tb1$Ind-mj.tb2$Ind)!=0)
source('dep.R')
#-- Rate Matrix ED_M6
q <- 1
C1 <- initQ(c("r", "b"), q)
A <- initQ(c('A*', 'A'), q)
Tl <- initQ(c('T*', 'T'), q)
step1 <- amaED(A, C1, type = "ql")
Qta <- amaED(Tl, step1, type = "ap")
Qta <- Qta/-diag(Qta)
Qta
Qta <-Qta*.3
Qta
expm(Qta*100)
expm::expm(Qta*100)
step1 <- amaED(A, C1, type = "ql")
Qta <- amaED(Tl, step1, type = "ap")
Qta
expm::expm(Qta*100)
