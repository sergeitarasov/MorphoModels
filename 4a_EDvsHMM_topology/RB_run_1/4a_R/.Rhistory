hist(st)
length(which(st<=0))/1000
st <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- fr[1,2]-fr[1,1]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
length(which(st<=0))/1000
st <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- fr[1,2]-fr[1,4]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
length(which(st<=0))/1000
mcc_tb1000
for (i in 1:100000){
ss <- sample(1:1000, 1, replace = T)
fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- fr[1,2]-fr[1,4]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
ss <- sample(1:1000, 1, replace = T)
mcc_tb1000[ss,]
#fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- mcc_tb1000[ss,2]-mcc_tb1000[ss,3]
st
st <- c()
for (i in 1:100000){
ss <- sample(1:1000, 1, replace = T)
#fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- mcc_tb1000[ss,2]-mcc_tb1000[ss,3]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
st
st <- c()
for (i in 1:2){
ss <- sample(1:1000, 1, replace = T)
#fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- mcc_tb1000[ss,2]-mcc_tb1000[ss,3]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
st
mcc_tb1000[ss,2]
mcc_tb1000$M6[2]-mcc_tb1000$M6[3]
mcc_tb1000
#fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- mcc_tb1000$M6[2]-mcc_tb1000$Ind[3]
st
mcc_tb1000$M6[2]-mcc_tb1000$Ind[3]
st <- c()
for (i in 1:2){
ss <- sample(1:1000, 1, replace = T)
#fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- mcc_tb1000$M6[2]-mcc_tb1000$Ind[3]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
st
st <- c()
for (i in 1:10000){
ss <- sample(1:1000, 1, replace = T)
#fr <- apply(mcc_tb1000[ss,], 2, table)
st[i] <- mcc_tb1000$M6[2]-mcc_tb1000$Ind[3]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
st
which(st<=0)
trees<-pbtree(n=4, scale=1, b=.1, d=0, nsim=1000)
#write.tree(trees, file = 'data/trees.tre')
plot(trees)
trees<-pbtree(n=4, scale=1, b=.1, d=0, nsim=1000)
#write.tree(trees, file = 'data/trees.tre')
plot(trees)
write.tree(trees, file = 'data/trees.tre')
trees <- read.tree('data/trees.tre')
#-- Rate Matrix ED_M6
q <- 1
C1 <- initQ(c("r", "b"), q)
A <- initQ(c('A*', 'A'), q)
Tl <- initQ(c('T*', 'T'), q)
step1 <- amaED(A, C1, type = "ql")
Qta <- amaED(Tl, step1, type = "ap")
Qta <- Qta/-diag(Qta)
Qta
Qta <-Qta*.3
Qta
pi <- rep(1/4,4)
names(pi) <- colnames(Qta)
#----- Simulate hist
Nch=10 # chars to select into matrix
nex.folder <- '../data' # folder for matrix
nex.folder.exp <- '../data_exp' # folder for expanded chars
hist <- list()
for (i in 1:length(trees)){
hist.i <- sim.history(trees[[i]], Qta, nsim=100, direction=c("row_to_column"), anc=pi)
fl <- paste0('r', i, '_', Nch, 'ch.nex')
print(paste0('Sim ', i))
hist2matrix(hist.i, Nch=Nch, recode.from=c('T*', 'TA*',  'TAr', 'TAb'), recode.to=c(0:3), nex.folder, nex.file=fl)
hist2matrix(hist.i, Nch=Nch, recode.from=c('T*', 'TA*',  'TAr', 'TAb'), recode.to=c('0 1 2 3', '4 5', '6', '7'), nex.folder.exp, nex.file=fl)
hist[[i]] <- hist.i
}
saveRDS(hist, file = 'data/hist.rds')
#rb.out <- '/Users/taravser/Documents/My_papers/Reply2Goloboff/Rev/MorphoModels/4a_EDvsHMM_topology/Puhti/ed_models/4a_EDvsHMM_topology/RB_run_1/output'
rb.out <- '/Users/taravser/Documents/My_papers/Reply2Goloboff/Rev/MorphoModels/4a_EDvsHMM_topology/Puhti/RB_run_1/output'
mcc.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*mcc.tre$")
length(mcc.M3)
mcc.M6 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M6'), pattern="*mcc.tre$")
mcc.Ind <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_ind'), pattern="*mcc.tre$")
mcc.SW <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_sw_M6'), pattern="*mcc.tre$")
mcc.M6
mcc.Ind
# original trees
trees <- read.tree('data/trees.tre')
nm0 <- paste0('r', 1:1000)
trees
# reoder trees
nm3 <- str_match(names(mcc.M3), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
length(nm3)
unique(nm3) %>% length()
nm6 <-str_match(names(mcc.M6), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
nm.ind <- str_match(names(mcc.Ind), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
nm.sw <- str_match(names(mcc.SW), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
all(nm3==nm6)
all(nm3==nm.ind)
all(nm3==nm.sw)
# reoder
trees.order <- trees[nm3]
# chack roedering
calcRF(trees.order, mcc.M6) %>% table
calcRF(trees, mcc.M6) %>% table
#-------
mcc.tb <- tibble(
#id=paste0('r', nm3),
id=nm3,
M3=calcRF(trees.order, mcc.M3),
M6=calcRF(trees.order, mcc.M6),
Ind=calcRF(trees.order, mcc.Ind),
SW=calcRF(trees.order, mcc.SW)
)
mcc.tb
apply(mcc.tb[,2:5], 2, table)
mcc.tb
ss <- sample(1:1000, 1000, replace = T)
mcc.tb[ss,]
apply(mcc.tb[ss,], 2, table)
mcc.tb[ss,]
apply(mcc.tb[ss,2::5], 2, table)
apply(mcc.tb[ss,2:5], 2, table)
apply(mcc.tb[ss,2:5], 2, table)
apply(mcc.tb[ss,2:5], 2, table)
st <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc.tb[ss,2:5], 2, table)
st[i] <- fr[1,2]-fr[1,4]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
length(which(st<=0))/1000
st <- c()
st <- c()
for (i in 1:10000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mcc.tb[ss,2:5], 2, table)
st[i] <- fr[1,2]-fr[1,4]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
length(which(st<=0))/1000
length(which(st<=0))/1000
length(which(st<=0))/10000
ss
source('dep.R')
#rb.out <- '/Users/taravser/Documents/My_papers/Reply2Goloboff/Rev/MorphoModels/4a_EDvsHMM_topology/Puhti/ed_models/4a_EDvsHMM_topology/RB_run_1/output'
rb.out <- '/Users/taravser/Documents/My_papers/Reply2Goloboff/Rev/MorphoModels/4a_EDvsHMM_topology/Puhti/RB_run_1/output'
mcc.M3
mcc.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*mcc.tre$")
mcc.M6 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M6'), pattern="*mcc.tre$")
mcc.Ind <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_ind'), pattern="*mcc.tre$")
mcc.SW <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_sw_M6'), pattern="*mcc.tre$")
# original trees
trees <- read.tree('data/trees.tre')
nm0 <- paste0('r', 1:1000)
# reoder trees
nm3 <- str_match(names(mcc.M3), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
length(nm3)
unique(nm3) %>% length()
nm6 <-str_match(names(mcc.M6), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
nm.ind <- str_match(names(mcc.Ind), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
nm.sw <- str_match(names(mcc.SW), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
all(nm3==nm6)
all(nm3==nm.ind)
all(nm3==nm.sw)
# reoder
trees.order <- trees[nm3]
# chack roedering
calcRF(trees.order, mcc.M6) %>% table
calcRF(trees, mcc.M6) %>% table
#-------
mcc.tb <- tibble(
#id=paste0('r', nm3),
id=nm3,
M3=calcRF(trees.order, mcc.M3),
M6=calcRF(trees.order, mcc.M6),
Ind=calcRF(trees.order, mcc.Ind),
SW=calcRF(trees.order, mcc.SW)
)
mcc.tb
apply(mcc.tb[,2:5], 2, table)
apply(mcc.tb[,2:5], 2, table)/2500
apply(mcc.tb[,2:5], 2, table)/1000
calcRF(trees.order, mcc.M3)
calcRF(trees.order, mcc.M6)
calcRF(trees.order, mcc.Ind)
mj.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*map.tre$")
mj.M6 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M6'), pattern="*map.tre$")
mj.Ind <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_ind'), pattern="*map.tre$")
mj.SW <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_sw_M6'), pattern="*map.tre$")
calcRF(trees.order, mj.M3) %>% table
calcRF(trees.order, mj.M6) %>% table
calcRF(trees.order, mj.Ind) %>% table
calcRF(trees.order, mj.SW) %>% table
mj.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*mjcon.tre$")
mj.M6 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M6'), pattern="*mjcon.tre$")
mj.Ind <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_ind'), pattern="*mjcon.tre$")
mj.SW <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_sw_M6'), pattern="*mjcon.tre$")
calcRF(trees.order, mj.M3) %>% table
calcRF(trees.order, mj.M6) %>% table
calcRF(trees.order, mj.Ind) %>% table
calcRF(trees.order, mj.SW) %>% table
mj.tb <- tibble(
#id=paste0('r', nm3),
id=nm3,
M3=calcRF(trees.order, mj.M3),
M6=calcRF(trees.order, mj.M6),
Ind=calcRF(trees.order, mj.Ind),
SW=calcRF(trees.order, mj.SW)
)
apply(mj.tb[,2:5], 2, table)
mj.tb
st <- c()
st <- c()
for (i in 1:1000){
ss <- sample(1:1000, 1000, replace = T)
fr <- apply(mj.tb[ss,2:5], 2, table)
st[i] <- fr[1,2]-fr[1,4]
#st2[i] <- fr[1,2]
#st3[i] <- fr[1,3]
}
hist(st)
length(which(st<=0))/1000
apply(mj.tb[,2:5], 2, table)
rel=(-38912.916410537575 + -38913.06560756707)/2
st=(-38595.67008125089 + -38595.85089909137)/2
st-rel
citation("phytools")
##  ............................................................................
##  Read trees  2                                                            ####
rb.out <- '/Users/taravser/Documents/My_papers/Reply2Goloboff/Rev/MorphoModels/4a_EDvsHMM_topology/Puhti/RB_run_2/output'
mj.tb1 <- tibble(
#id=paste0('r', nm3),
id=nm3,
M3=calcRF(trees.order, mj.M3),
M6=calcRF(trees.order, mj.M6),
Ind=calcRF(trees.order, mj.Ind),
SW=calcRF(trees.order, mj.SW)
)
##  ............................................................................
##  Read trees  2                                                            ####
rb.out <- '/Users/taravser/Documents/My_papers/Reply2Goloboff/Rev/MorphoModels/4a_EDvsHMM_topology/Puhti/RB_run_2/output'
mj.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*mjcon.tre$")
mj.M6 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M6'), pattern="*mjcon.tre$")
mj.Ind <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_ind'), pattern="*mjcon.tre$")
mj.SW <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_sw_M6'), pattern="*mjcon.tre$")
mj.tb2 <- tibble(
#id=paste0('r', nm3),
id=nm3,
M3=calcRF(trees.order, mj.M3),
M6=calcRF(trees.order, mj.M6),
Ind=calcRF(trees.order, mj.Ind),
SW=calcRF(trees.order, mj.SW)
)
apply(mj.tb[,2:5], 2, table)
apply(mj.tb1[,2:5], 2, table)
apply(mj.tb2[,2:5], 2, table)
mj.tb1
mj.tb2
mj.tb2[,3]
mj.tb1[[,3]]
mj.tb1[[,3]]
mj.tb1[[,3]]
mj.tb2[[,3]]
mj.tb2$M6
mj.tb1$M6
mj.tb1$M6-mj.tb2$M6
which((mj.tb1$M6-mj.tb2$M6)!=0)
which((mj.tb1$M3-mj.tb2$M3)!=0)
mj.tb1
which((mj.tb1$Ind-mj.tb2$Ind)!=0)
source('dep.R')
#-- Rate Matrix ED_M6
q <- 1
C1 <- initQ(c("r", "b"), q)
A <- initQ(c('A*', 'A'), q)
Tl <- initQ(c('T*', 'T'), q)
step1 <- amaED(A, C1, type = "ql")
Qta <- amaED(Tl, step1, type = "ap")
Qta <- Qta/-diag(Qta)
Qta
Qta <-Qta*.3
Qta
expm(Qta*100)
expm::expm(Qta*100)
step1 <- amaED(A, C1, type = "ql")
Qta <- amaED(Tl, step1, type = "ap")
Qta
expm::expm(Qta*100)
(-305.205+-305.085)/2
(-298.592+-298.499)/2
(-323.626+-323.138)/2
(-318.805+-318.287)/2
ln <- c(-305.205+-305.085)/2,
(-298.592+-298.499)/2,
(-323.626+-323.138)/2,
(-318.805+-318.287)/2
)
ln <- c(-305.205+-305.085)/2,
(-298.592+-298.499)/2,
(-323.626+-323.138)/2,
(-318.805+-318.287)/2
)
ln <- c(
(-305.205+-305.085)/2,
(-298.592+-298.499)/2,
(-323.626+-323.138)/2,
(-318.805+-318.287)/2
)
ln
ln[2]-ln
round(ln, 3)
round(ln, 2)
round(ln[2]-ln,2)
round(ln, 2)
mj.tb2
mj.tb1
apply(mj.tb1.final[,2:5], 2, table)
# Both runs should give the same table
apply(mj.tb1[,2:5], 2, table)
# > apply(mj.tb1[,2:5], 2, table)
# M3  M6 Ind  SW
# 0 499 503 481 477
# 1 231 224 226 225
# 2 207 212 223 225
# 3  46  46  45  50
# 4  17  15  25  23
apply(mj.tb2[,2:5], 2, table)
# > apply(mj.tb1[,2:5], 2, table)
# M3  M6 Ind  SW
# 0 499 503 481 477
# 1 231 224 226 225
# 2 207 212 223 225
# 3  46  46  45  50
# 4  17  15  25  23
apply(mj.tb2[,2:5], 2, table)
apply(mj.tb1.final[,2:5], 2, table)
# Proportion are different between Run1 and Run2. This happens because some clades may have suppprt very close to .5
# Let's remove different results
rr <- which((mj.tb1$M6-mj.tb2$M6)!=0)
mj.tb1[rr,]
# different rows
diff <- c(
which((mj.tb1$M6-mj.tb2$M6)!=0),
which((mj.tb1$M3-mj.tb2$M3)!=0),
which((mj.tb1$Ind-mj.tb2$Ind)!=0),
which((mj.tb1$SW-mj.tb2$SW)!=0)
)
diff <- unique(diff)
mj.tb1[diff,]
# remove different rows
mj.tb1.final <- mj.tb1[-diff,]
mj.tb2.final <- mj.tb2[-diff,]
apply(mj.tb1.final[,2:5], 2, table)
apply(mj.tb2.final[,2:5], 2, table)
rb.out <- '../../Puhti/RB_run_1/output'
mj.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*mjcon.tre$")
source('dep.R')
rb.out <- '../../Puhti/RB_run_1/output'
mj.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*mjcon.tre$")
length(mj.M3)
mj.M6 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M6'), pattern="*mjcon.tre$")
mj.Ind <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_ind'), pattern="*mjcon.tre$")
mj.SW <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_sw_M6'), pattern="*mjcon.tre$")
# original trees
trees <- read.tree('data/trees.tre')
nm0 <- paste0('r', 1:1000)
# reoder trees
nm3 <- str_match(names(mj.M3), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
length(nm3)
unique(nm3) %>% length()
nm6 <-str_match(names(mj.M6), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
nm.ind <- str_match(names(mj.Ind), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
nm.sw <- str_match(names(mj.SW), "out_r\\s*(.*?)\\s*_")[,2] %>% as.numeric()
all(nm3==nm6)
all(nm3==nm.ind)
all(nm3==nm.sw)
# reoder
trees.order <- trees[nm3]
# check roedering
# properly reodered
calcRF(trees.order, mj.M6) %>% table
# not reodered
calcRF(trees, mj.M6) %>% table
mj.tb1 <- tibble(
#id=paste0('r', nm3),
id=nm3,
M3=calcRF(trees.order, mj.M3),
M6=calcRF(trees.order, mj.M6),
Ind=calcRF(trees.order, mj.Ind),
SW=calcRF(trees.order, mj.SW)
)
mj.tb1
apply(mj.tb1.final[,2:5], 2, table)
##  ............................................................................
##  Read trees, Run 2                                                        ####
rb.out <- '../../Puhti/RB_run_2/output'
mj.M3 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M3'), pattern="*mjcon.tre$")
mj.M6 <- redTreesDir(rb.path=file.path(rb.out, 'out_ED_M6'), pattern="*mjcon.tre$")
mj.Ind <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_ind'), pattern="*mjcon.tre$")
mj.SW <- redTreesDir(rb.path=file.path(rb.out, 'out_SMM_sw_M6'), pattern="*mjcon.tre$")
mj.tb2 <- tibble(
#id=paste0('r', nm3),
id=nm3,
M3=calcRF(trees.order, mj.M3),
M6=calcRF(trees.order, mj.M6),
Ind=calcRF(trees.order, mj.Ind),
SW=calcRF(trees.order, mj.SW)
)
# Both runs should give the same table
apply(mj.tb1[,2:5], 2, table)
# > apply(mj.tb1[,2:5], 2, table)
# M3  M6 Ind  SW
# 0 499 503 481 477
# 1 231 224 226 225
# 2 207 212 223 225
# 3  46  46  45  50
# 4  17  15  25  23
apply(mj.tb2[,2:5], 2, table)
# Proportion are different between Run1 and Run2. This happens because some clades may have suppprt very close to .5
# Let's remove different results
rr <- which((mj.tb1$M6-mj.tb2$M6)!=0)
mj.tb1[rr,]
# different rows
diff <- c(
which((mj.tb1$M6-mj.tb2$M6)!=0),
which((mj.tb1$M3-mj.tb2$M3)!=0),
which((mj.tb1$Ind-mj.tb2$Ind)!=0),
which((mj.tb1$SW-mj.tb2$SW)!=0)
)
diff <- unique(diff)
mj.tb1[diff,]
# remove different rows
mj.tb1.final <- mj.tb1[-diff,]
mj.tb2.final <- mj.tb2[-diff,]
apply(mj.tb1.final[,2:5], 2, table)
apply(mj.tb2.final[,2:5], 2, table)
saveRDS(mj.tb1.final, 'data/mj_tb1_final.rds')
# Proceed to Bootstrap
rstudioapi::navigateToFile("Bootstrap.R")
# To compare the proportions of correctly recovered trees between the original and other models,
# I used the proportion differential and bootstrapped p-values.
# The proportion differential $pd$ was calculated as $pd=Prop(ED_6)-Prop(M_i)$,
# where $Prop$ stands for the proportion of the correctly recovered tress and $M_i$ is one of the models.
# The p-value for $pd$ was estimated by bootstrapping with 5000 replications.
#
mj.tb1.final <- readRDS('data/mj_tb1_final.rds')
mj.tb1.final
N.repl <- 5000
dt.size<- nrow(mj.tb1.final)
# matrix to store pd metrics
pd <- matrix(NA, N.repl, 3)
colnames(pd) <- c('pd.M3', 'pd.Ind', 'pd.SW')
# Boostraping
for (i in 1:N.repl){
ss <- sample(1:dt.size, dt.size, replace = TRUE)
fr <- apply(mj.tb1.final[ss,2:5], 2, table)
pd[i,1] <- fr[1,2]-fr[1,1]
pd[i,2] <- fr[1,2]-fr[1,3]
pd[i,3] <- fr[1,2]-fr[1,4]
}
pd
hist(pd[,1])
#-------Calculate p-values
apply(pd, 2, function(x) length(which(x<=0))/N.repl)
saveRDS(mj.tb1, 'data/mj.tb1.rds')
saveRDS(mj.tb2, 'data/mj.tb2.rds')
